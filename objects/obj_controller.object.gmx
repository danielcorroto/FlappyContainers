<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Randomize
randomize();

// Crear personaje
char = instance_create(50, 50, obj_character);

// Escalar
char.image_xscale = (room_width * FL_CHAR_SCALE / char.sprite_width);
char.image_yscale = (room_height * FL_CHAR_SCALE / char.sprite_height);
char.image_angle = FL_CHAR_BASE_ANGLE;

// Establecer posici√≥n
char.x = room_width * FL_GAME_STARTX;
char.y = room_height / 2 - char.sprite_height / 2;

// Iniciar contenedores
alarm_set(0,FL_CONTAINER_TIME_FIRST);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (obj_character.move) {
    posy = room_height * random_range(FL_CONTAINER_MIN_TOP, FL_CONTAINER_MAX_TOP);
    
    container_top = instance_create(room_width, posy, obj_container);
    container_top.hspeed = FL_CONTAINER_SPEED;
    
    stick_top = instance_create(room_width, 0, obj_stick);
    stick_top.hspeed = FL_CONTAINER_SPEED;
    stick_top.image_yscale *= container_top.y / stick_top.sprite_height;
    
    container_down = instance_create(room_width, posy + room_height * FL_CONTAINER_DISTANCE, obj_container);
    container_down.hspeed = FL_CONTAINER_SPEED;
    
    stick_down = instance_create(room_width, container_down.y, obj_stick);
    stick_down.hspeed = FL_CONTAINER_SPEED;
    stick_down.image_yscale *= (room_height - container_down.y) / stick_down.sprite_height;
    
    alarm_set(0,FL_CONTAINER_TIME_DISTANCE);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!obj_character.move) {
    game_restart();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
